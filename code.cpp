#include <iostream>
#include <vector>
#include <limits>
#include <random>
#include <chrono>
#include <map>
#include <iomanip>

using namespace std;

const double INF = numeric_limits<double>::infinity();

// Recursive function to compute the shortest path using Held-Karp
double tsp_hk_rec(int start, const vector<int>& remaining, const vector<vector<int>>& dist, map<pair<int, vector<int>>, double>& cache) {
    if (remaining.size() == 1) {
        return dist[start][remaining[0]];
    }

    auto key = make_pair(start, remaining);
    if (cache.find(key) != cache.end()) {
        return cache[key];
    }

    double minLength = INF;
    for (auto city : remaining) {
        vector<int> newRemaining;
        for (auto x : remaining) {
            if (x != city)
                newRemaining.push_back(x);
        }

        double tourLength = tsp_hk_rec(city, newRemaining, dist, cache) + dist[start][city];
        minLength = min(minLength, tourLength);
    }

    cache[key] = minLength;
    return minLength;
}

// Main function to compute TSP using Held-Karp
double tsp_hk(const vector<vector<int>>& dist) {
    int numCities = dist.size();
    double shortestTour = INF;
    map<pair<int, vector<int>>, double> cache;

    for (int start = 0; start < numCities; ++start) {
        vector<int> remaining;
        for (int i = 0; i < numCities; ++i) {
            if (i != start) remaining.push_back(i);
        }

        double tourLength = tsp_hk_rec(start, remaining, dist, cache);
        shortestTour = min(shortestTour, tourLength);
    }

    return shortestTour;
}

// Function to measure execution time
void timing() {
    vector<vector<vector<int>>> matrixList = {
        {{0, 72, 5, 62, 70, 55, 22, 26, 15, 16},{55, 0, 12, 70, 24, 91, 32, 53, 96, 46},{23, 85, 0, 71, 8, 83, 98, 41, 97, 44},{91, 42, 11, 0, 54, 63, 33, 58, 35, 45},{56, 86, 23, 65, 0, 89, 70, 95, 40, 70},{31, 72, 83, 70, 86, 0, 90, 4, 58, 22},{87, 1, 64, 82, 98, 7, 0, 8, 88, 82},{85, 3, 93, 6, 16, 20, 61, 0, 6, 50},{31, 30, 88, 33, 72, 89, 20, 83, 0, 42},{65, 6, 43, 76, 64, 4, 45, 75, 15, 0}},
        {{0, 43, 100, 99, 72, 15, 58, 98, 45, 53, 92},{98, 0, 83, 19, 77, 28, 24, 67, 80, 46, 78},{75, 16, 0, 66, 41, 6, 73, 83, 68, 24, 6},{37, 59, 25, 0, 29, 58, 52, 80, 21, 45, 4},{12, 61, 25, 43, 0, 46, 86, 25, 100, 34, 2},{14, 65, 17, 62, 62, 0, 51, 85, 45, 88, 31},{19, 6, 4, 88, 28, 57, 0, 46, 92, 91, 92},{55, 40, 57, 20, 60, 24, 93, 0, 100, 68, 99},{67, 48, 61, 47, 20, 72, 31, 36, 0, 49, 85},{35, 55, 64, 61, 30, 50, 74, 17, 66, 0, 25},{16, 29, 6, 78, 56, 9, 95, 77, 41, 70, 0}},
        {{0, 75, 90, 60, 77, 46, 85, 46, 26, 6, 91, 21},{3, 0, 61, 86, 36, 94, 73, 70, 94, 4, 60, 78},{40, 25, 0, 35, 90, 30, 48, 6, 96, 7, 57, 96},{98, 64, 82, 0, 47, 33, 57, 75, 10, 45, 66, 36},{49, 73, 44, 71, 0, 17, 24, 47, 45, 36, 74, 87},{91, 88, 20, 19, 1, 0, 28, 5, 11, 54, 17, 55},{74, 83, 31, 16, 65, 4, 0, 92, 98, 82, 84, 63},{23, 98, 59, 86, 91, 43, 97, 0, 51, 36, 98, 57},{4, 16, 78, 25, 63, 20, 12, 75, 0, 90, 38, 66},{72, 4, 65, 99, 98, 41, 57, 26, 79, 0, 63, 27},{77, 10, 31, 5, 48, 1, 64, 99, 19, 65, 0, 33},{45, 83, 6, 89, 67, 11, 18, 10, 39, 70, 25, 0}},
        {{0, 18, 33, 27, 27, 21, 3, 29, 32, 91, 61, 4, 98},{42, 0, 72, 45, 35, 56, 90, 98, 37, 1, 68, 64, 3},{99, 60, 0, 6, 31, 90, 6, 63, 60, 74, 14, 42, 14},{56, 83, 52, 0, 39, 53, 52, 94, 51, 12, 51, 89, 80},{30, 26, 33, 4, 0, 73, 32, 12, 33, 25, 39, 76, 11},{63, 3, 43, 48, 66, 0, 25, 68, 7, 46, 27, 48, 37},{74, 45, 93, 5, 4, 88, 0, 7, 28, 51, 88, 36, 66},{79, 25, 2, 40, 62, 99, 56, 0, 42, 78, 95, 3, 55},{79, 97, 8, 67, 17, 29, 78, 69, 0, 51, 97, 72, 29},{57, 64, 97, 81, 81, 27, 77, 1, 64, 0, 69, 41, 52},{92, 91, 61, 72, 29, 59, 30, 83, 77, 24, 0, 57, 32},{15, 36, 16, 12, 44, 52, 65, 78, 19, 12, 55, 0, 97},{57, 97, 87, 19, 53, 57, 33, 35, 61, 49, 5, 73, 0}},
        {{0, 58, 40, 82, 70, 35, 95, 91, 14, 98, 69, 27, 23, 71},{48, 0, 59, 4, 24, 76, 61, 32, 53, 34, 28, 83, 61, 22},{79, 70, 0, 63, 6, 35, 24, 43, 69, 48, 87, 83, 43, 74},{74, 86, 35, 0, 69, 82, 51, 68, 77, 93, 49, 52, 69, 20},{8, 96, 64, 75, 0, 25, 90, 13, 35, 90, 27, 100, 21, 62},{63, 66, 68, 4, 55, 0, 68, 89, 15, 98, 16, 33, 82, 90},{95, 89, 51, 82, 66, 60, 0, 72, 23, 27, 8, 11, 69, 1},{54, 77, 70, 26, 88, 20, 73, 0, 68, 17, 71, 54, 4, 55},{66, 23, 41, 62, 96, 39, 26, 48, 0, 75, 37, 69, 92, 97},{21, 1, 13, 33, 49, 14, 36, 84, 5, 0, 34, 61, 43, 72},{29, 39, 66, 69, 56, 54, 47, 41, 14, 47, 0, 74, 39, 15},{70, 40, 78, 29, 22, 22, 90, 91, 54, 76, 90, 0, 36, 69},{39, 76, 75, 11, 31, 54, 57, 47, 72, 45, 89, 51, 0, 84},{71, 69, 87, 61, 22, 55, 68, 75, 11, 24, 10, 38, 75, 0}},
        {{0, 30, 29, 1, 12, 41, 34, 20, 47, 50, 54, 1, 19, 19, 76},{86, 0, 4, 84, 78, 66, 24, 48, 29, 68, 93, 28, 81, 2, 44},{83, 16, 0, 93, 8, 23, 74, 23, 91, 57, 64, 37, 51, 76, 39},{47, 5, 5, 0, 22, 80, 24, 75, 22, 32, 19, 32, 42, 52, 85},{23, 79, 48, 30, 0, 52, 21, 7, 55, 8, 57, 63, 91, 86, 4},{11, 83, 42, 100, 9, 0, 52, 16, 45, 4, 20, 49, 39, 86, 80},{61, 15, 49, 82, 94, 78, 0, 28, 86, 20, 8, 95, 73, 42, 45},{78, 22, 85, 95, 69, 43, 34, 0, 2, 17, 48, 51, 31, 50, 75},{85, 56, 65, 6, 93, 17, 32, 26, 0, 88, 39, 62, 91, 2, 19},{99, 52, 25, 74, 97, 64, 96, 58, 9, 0, 51, 100, 72, 19, 47},{40, 1, 31, 47, 78, 26, 17, 49, 72, 93, 0, 53, 24, 53, 30},{55, 33, 69, 92, 78, 10, 86, 2, 28, 30, 45, 0, 100, 43, 70},{94, 79, 52, 84, 78, 8, 87, 37, 90, 30, 85, 60, 0, 83, 62},{67, 43, 59, 7, 91, 88, 36, 57, 8, 40, 50, 23, 84, 0, 68},{80, 94, 20, 85, 60, 9, 51, 28, 26, 39, 66, 3, 86, 3, 0}},
        {{0, 13, 66, 63, 65, 28, 84, 97, 70, 9, 15, 24, 40, 26, 16, 54},{7, 0, 84, 69, 63, 19, 48, 4, 40, 80, 84, 100, 71, 96, 12, 69},{62, 60, 0, 94, 100, 2, 68, 33, 21, 5, 34, 10, 93, 34, 72, 72},{23, 71, 76, 0, 45, 55, 6, 69, 5, 83, 1, 62, 32, 43, 91, 82},{85, 76, 17, 42, 0, 90, 38, 74, 1, 60, 72, 63, 27, 63, 54, 81},{24, 49, 75, 75, 39, 0, 98, 90, 35, 5, 38, 45, 34, 55, 51, 58},{58, 97, 25, 91, 9, 25, 0, 67, 60, 55, 29, 34, 97, 68, 93, 89},{87, 29, 32, 67, 1, 65, 97, 0, 8, 87, 9, 66, 5, 69, 60, 57},{56, 6, 47, 39, 14, 31, 40, 12, 0, 93, 67, 52, 4, 74, 40, 89},{22, 92, 47, 71, 66, 7, 40, 78, 79, 0, 54, 8, 17, 73, 63, 42},{35, 10, 23, 92, 32, 18, 53, 48, 82, 24, 0, 20, 31, 64, 87, 80},{5, 12, 87, 93, 4, 60, 48, 91, 12, 55, 58, 0, 88, 23, 71, 25},{78, 58, 34, 98, 9, 72, 81, 38, 28, 25, 2, 99, 0, 62, 22, 27},{57, 90, 98, 100, 89, 93, 31, 89, 31, 40, 92, 22, 91, 0, 92, 42},{52, 21, 27, 87, 88, 5, 25, 79, 92, 64, 56, 79, 80, 70, 0, 73},{66, 30, 35, 9, 14, 94, 22, 94, 98, 54, 15, 68, 69, 47, 88, 0}},
        {{0, 70, 91, 93, 67, 42, 57, 87, 85, 52, 4, 90, 98, 34, 57, 69, 33},{38, 0, 21, 96, 27, 23, 62, 93, 48, 63, 12, 76, 13, 95, 34, 52, 100},{79, 73, 0, 55, 80, 75, 89, 18, 70, 75, 32, 96, 40, 26, 52, 27, 78},{82, 23, 74, 0, 68, 47, 90, 3, 38, 52, 38, 72, 35, 36, 23, 92, 45},{15, 94, 46, 93, 0, 20, 4, 54, 80, 28, 81, 41, 34, 95, 10, 94, 48},{60, 41, 5, 86, 9, 0, 59, 89, 92, 56, 48, 34, 40, 14, 56, 40, 66},{13, 78, 75, 55, 7, 68, 0, 21, 56, 42, 38, 23, 10, 15, 15, 6, 45},{46, 45, 73, 36, 59, 3, 95, 0, 58, 99, 61, 52, 64, 3, 39, 31, 34},{60, 96, 84, 17, 63, 73, 56, 24, 0, 84, 57, 89, 98, 38, 66, 8, 4},{66, 87, 21, 7, 60, 57, 8, 70, 22, 0, 10, 58, 49, 46, 77, 19, 8},{59, 30, 70, 1, 12, 16, 38, 72, 69, 22, 0, 74, 62, 72, 58, 56, 81},{37, 64, 27, 22, 35, 3, 32, 57, 67, 87, 76, 0, 17, 29, 47, 32, 56},{66, 65, 58, 60, 90, 52, 60, 93, 83, 12, 72, 33, 0, 12, 54, 28, 73},{15, 57, 80, 12, 31, 27, 98, 90, 45, 17, 45, 62, 69, 0, 24, 72, 92},{35, 82, 6, 42, 96, 51, 92, 37, 20, 63, 99, 26, 16, 49, 0, 67, 90},{86, 13, 82, 72, 13, 95, 7, 95, 60, 23, 67, 4, 32, 25, 56, 0, 62},{59, 87, 25, 20, 15, 15, 99, 69, 30, 29, 16, 97, 34, 63, 63, 81, 0}},
        {{0, 8, 92, 47, 98, 65, 40, 75, 74, 14, 44, 70, 90, 11, 37, 23, 44, 21},{99, 0, 40, 69, 38, 77, 36, 60, 14, 3, 93, 19, 4, 3, 20, 19, 56, 13},{45, 91, 0, 64, 63, 40, 26, 94, 90, 26, 98, 11, 28, 61, 55, 50, 91, 45},{27, 39, 11, 0, 54, 55, 81, 69, 51, 69, 57, 93, 26, 29, 29, 99, 90, 6},{45, 59, 10, 14, 0, 79, 11, 75, 37, 99, 43, 36, 90, 45, 50, 27, 17, 58},{53, 38, 58, 68, 63, 0, 56, 63, 55, 67, 42, 27, 19, 78, 4, 44, 54, 25},{28, 55, 6, 29, 67, 77, 0, 75, 73, 97, 17, 12, 43, 29, 22, 11, 99, 7},{19, 28, 11, 75, 100, 42, 25, 0, 53, 2, 42, 5, 23, 4, 42, 58, 51, 53},{63, 84, 13, 41, 16, 49, 55, 36, 0, 35, 13, 78, 46, 21, 24, 9, 1, 25},{73, 1, 40, 5, 81, 30, 78, 20, 16, 0, 6, 71, 12, 26, 6, 11, 52, 100},{49, 8, 68, 55, 37, 2, 34, 21, 50, 20, 0, 15, 36, 16, 10, 44, 7, 73},{49, 39, 92, 36, 50, 31, 83, 75, 37, 24, 96, 0, 40, 8, 28, 47, 50, 15},{72, 63, 25, 76, 65, 67, 90, 2, 44, 45, 65, 5, 0, 31, 19, 39, 23, 55},{95, 65, 10, 36, 93, 23, 6, 98, 47, 30, 17, 89, 12, 0, 30, 9, 54, 73},{19, 27, 40, 11, 29, 36, 70, 80, 26, 64, 26, 24, 4, 11, 0, 27, 40, 3},{17, 30, 41, 67, 52, 10, 16, 71, 76, 74, 21, 73, 53, 8, 31, 0, 34, 42},{50, 40, 75, 50, 5, 58, 18, 75, 24, 37, 13, 61, 96, 83, 77, 74, 0, 58},{88, 85, 63, 22, 6, 22, 81, 70, 7, 69, 77, 68, 70, 75, 43, 27, 25, 0}},
        {{0, 70, 23, 23, 91, 77, 34, 57, 20, 21, 60, 66, 82, 44, 30, 81, 46, 16, 8},{44, 0, 42, 96, 89, 61, 37, 63, 82, 20, 6, 86, 99, 85, 60, 95, 93, 75, 94},{40, 36, 0, 10, 14, 61, 61, 8, 31, 6, 27, 35, 96, 12, 8, 7, 74, 92, 92},{54, 35, 4, 0, 48, 89, 48, 81, 76, 59, 99, 5, 23, 41, 11, 41, 53, 66, 76},{42, 41, 16, 38, 0, 97, 97, 61, 64, 65, 38, 78, 43, 40, 72, 69, 38, 66, 66},{7, 34, 100, 28, 74, 0, 80, 96, 97, 60, 31, 78, 81, 32, 69, 43, 16, 23, 97},{60, 67, 15, 45, 97, 86, 0, 25, 99, 9, 13, 21, 3, 68, 2, 88, 40, 75, 88},{96, 61, 25, 94, 2, 74, 92, 0, 81, 58, 8, 63, 31, 40, 18, 57, 72, 63, 50},{72, 53, 54, 42, 75, 37, 40, 65, 0, 13, 94, 99, 33, 2, 1, 97, 25, 58, 30},{4, 22, 93, 26, 36, 98, 67, 39, 77, 0, 67, 37, 89, 7, 81, 10, 48, 10, 96},{60, 57, 4, 55, 26, 84, 95, 68, 64, 75, 0, 40, 91, 65, 97, 12, 41, 69, 28},{38, 46, 6, 13, 41, 74, 71, 39, 76, 100, 85, 0, 73, 44, 22, 60, 87, 99, 92},{75, 92, 11, 43, 49, 89, 32, 60, 5, 46, 64, 50, 0, 37, 83, 63, 30, 16, 86},{30, 58, 48, 97, 91, 33, 14, 54, 68, 49, 23, 74, 54, 0, 74, 25, 86, 43, 60},{51, 100, 95, 25, 56, 39, 81, 73, 26, 99, 88, 98, 81, 58, 0, 6, 94, 47, 25},{31, 74, 2, 70, 40, 52, 44, 36, 3, 61, 7, 12, 39, 89, 50, 0, 95, 80, 74},{97, 4, 60, 18, 28, 89, 47, 53, 99, 3, 28, 54, 98, 35, 40, 5, 0, 5, 82},{79, 70, 80, 81, 94, 51, 12, 86, 30, 79, 73, 42, 49, 63, 37, 43, 36, 0, 65},{55, 61, 26, 17, 30, 94, 24, 65, 48, 34, 74, 60, 67, 24, 52, 54, 25, 83, 0}}
    };

    std::cout << "Running Held Karp" << endl;

    for (int i = 0; i < matrixList.size(); ++i) {
        double avg = 0.0;

        for (int j = 0; j < 10; ++j) {
            auto start_hk = chrono::high_resolution_clock::now();
            int answer = tsp_hk(matrixList[i]);
            auto end_hk = chrono::high_resolution_clock::now();
            auto duration_hk = std::chrono::duration_cast<chrono::microseconds>(end_hk - start_hk);
            avg += duration_hk.count() / 1000000.0; // Convert microseconds to seconds
        }

        avg /= 10;
        std::cout << matrixList[i].size() << " cities in " << fixed << setprecision(8) << avg << " seconds on average" << endl;
    }
}

int main() {
    timing();
    return 0;
}
